/* 
 * SwaggerApi
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LibraryResults
    /// </summary>
    [DataContract]
    public partial class LibraryResults :  IEquatable<LibraryResults>, IValidatableObject
    {
        /// <summary>
        /// Defines Outcome
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OutcomeEnum
        {
            
            /// <summary>
            /// Enum Failed for value: Failed
            /// </summary>
            [EnumMember(Value = "Failed")]
            Failed = 0,
            
            /// <summary>
            /// Enum Success for value: Success
            /// </summary>
            [EnumMember(Value = "Success")]
            Success = 1
        }

        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [DataMember(Name="Outcome", EmitDefaultValue=false)]
        public OutcomeEnum? Outcome { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="LibraryResults" /> class.
        /// </summary>
        /// <param name="outcome">outcome.</param>
        /// <param name="books">books.</param>
        public LibraryResults(OutcomeEnum? outcome = default(OutcomeEnum?), List<Book> books = default(List<Book>))
        {
            this.Outcome = outcome;
            this.Books = books;
        }
        

        /// <summary>
        /// Gets or Sets Books
        /// </summary>
        [DataMember(Name="Books", EmitDefaultValue=false)]
        public List<Book> Books { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LibraryResults {\n");
            sb.Append("  Outcome: ").Append(Outcome).Append("\n");
            sb.Append("  Books: ").Append(Books).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LibraryResults);
        }

        /// <summary>
        /// Returns true if LibraryResults instances are equal
        /// </summary>
        /// <param name="input">Instance of LibraryResults to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LibraryResults input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Outcome == input.Outcome ||
                    (this.Outcome != null &&
                    this.Outcome.Equals(input.Outcome))
                ) && 
                (
                    this.Books == input.Books ||
                    this.Books != null &&
                    this.Books.SequenceEqual(input.Books)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Outcome != null)
                    hashCode = hashCode * 59 + this.Outcome.GetHashCode();
                if (this.Books != null)
                    hashCode = hashCode * 59 + this.Books.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
